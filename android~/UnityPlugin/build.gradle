plugins {
    id 'com.android.library'
}

android {
    namespace 'com.dcgoodnow.androidunityplugin'
    compileSdk 33

    defaultConfig {
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

def pluginsFolder = [project.rootDir, '..', 'Plugins', 'Android'].join(File.separator)

task cleanPlugins(type: Delete) {
    delete fileTree(pluginsFolder) { includes = ['*.aar', '*.aar.meta'] }
}

task copyOutputRelease (type: Copy, dependsOn: cleanPlugins) {
    from    ( [buildDir.absolutePath, 'outputs', 'aar'].join(File.separator) )
    include ( "*-release.aar" )
    into (pluginsFolder)
}

task copyOutputDebug (type: Copy, dependsOn: cleanPlugins) {
    from    ( [buildDir.absolutePath, 'outputs', 'aar'].join(File.separator) )
    include ( "*-debug.aar" )
    into (pluginsFolder)
}

afterEvaluate {
    assembleDebug.finalizedBy(copyOutputDebug)
    assembleRelease.finalizedBy(copyOutputRelease)
}